1. 애자일 방법론에 해당하지 않는것은 : 모듈 중심 개발
2. 소프트웨어 생명 주기 모델 중 나선형 모델의 설명으로 틀린것은? : 위험분석은 반복적인 개발 진행 후 주기의 마지막 단계에서 최종적으로 한 번 수행해야한다
  - 나선형 모델은 위험분석이 개발과정에 포함되므로 개발 진행 과정에서 반복적으로 수행한다.
3. 익스트림 프로그래밍에 대한 설명으로 틀린것 : 대표적인 구조적 방법론 중 하나이다.
  - 익스트림 프로그래밍은 애자일 개발 방법론을 기반으로 한 대표적인 모형
4. 다음 중 현행 시스템 파악 과정에 대한 설명으로 잘못된 것은? : 아키텍쳐 구성을 파악할 때는 단위 업무 시스템 간에 주고 받는 데이터의 종류, 형식, 프로토콜, 연계 유형, 주기 등을 명시한다.
  - 데이터의 종류,형식,프로토콜 등을 명시하는 것은 아키텍쳐 구성 파악이 아닌 시스템 인터페이스 파악 시 기술할 내용이다. 아키텍쳐 구성은 기간 업무 수행에 어떤 기술 요소가 사용되었는지 최상위 수준에서 계층별로 표현한 것이다.
5. WAS(Web Application Server)이 아닌것은? JVM
  - JVM은 자바 가상머신
6. 요구사항 분석에서 비기능적 요구에 대한 설명으로 옳은것
  - 차량 대여 시스템이 제공하는 모든 화면이 3초 이내에 사용자에게 보여야 한다 는 비기능적요소
  - 시스템의 처리량, 반응시간등의 성능 요구-품질요구는 비기능적 요구에 해당, 시스템 구축,안전,보안 요구사항들은 비기능적 요구, 금융 시스템의 기능에 대한 설명은 기능적요소
7. 요구사항 분석이 어려운 이유가 아닌것
  - 사용자의 요구는 예외가 거의 없어 열거와 구조화가 어렵지 않다 -> 사용자의 요구는 수시로 예외가 발생할 수 있기 때문에 열거와 구조화가 어렵다.
8. 요구분석에 대한 설명으로 틀린것 
  - 성능 보안 품질 안정등에 대한 요구사항은 비기능적 요구사항에 해당
9. 자료 사전에서 자료의 생략을 의미하는 기호는
  - ()
10. SoftTech사에서 개발한 것으로 구조적 요구 분석을 하기 위해 블록 다이어그램을 채택한 자동화 도구는 
  - SADT
11. UML에서 활용되는 다이어 그램 중 시스템의 동작을 표현하는 행위 다이어그램에 해당하지 않는것 
  - 배치 다이어그램 -> 행위다이어그램이 아닌 구조적 다이어그램
12. UML 다이어그램 중 정적 다이어그램이 아닌것은?
  - 순차다이어그램
13. UML모델에서 한 객체가 다른 객체에서 오퍼레이션을 수행하도록 지정하는 의미적 관계로 옳은것은?
  - Realization(실체화)
14. UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는것은?
  - 확장 (시퀀스 다이어그램의 구성항목으로는 Object, Lifeline, Actor, Activity Box, Message)
15. Usecase에 대한 설명 중 옳은것은?
  - Actor는 대상 시스템과 상호 작용하는 사람이나 다른 시스템에 의한 역할
  - 유스케이스 다이어그램은 개발자의 요구를 추출하고 분석하기 위해 주로 사용 -> 사용자의 요구를 분석하는데 사용
  - 사용자 액터는 본 시스템과 데이터를 주고받는 연동 시스템을 의미 -> 주액터는 이득을 얻는 대상을 의미 주로 사람
  - 연동의 개념은 일반적으로 데이터를 파일이나 정해진 형식으로 넘겨주는것을 의미 -> 연동은 2개 이상의 시스템이 상호 간 동작에 영향을 줄 수 있도록 연결망을 구성하는것을 의미
16. 소프트웨어 개발 모형이 가장 적절하게 선택된 경우
  - 구축하고자 하는 시스템의 요구사항이 불분명하여 프로토타입 모형을 선택 = 프로토타입 모형은 짧은 간격으로 사용자의 피드백을 받아 진행하기 때문에 요구사항이 불분명할때 용이
17. Life Cycle모형 중 프로토타입 모형의 가장 큰 장점은?
  - 요구 사항의 정확한 파악
18. 다음 중 스크럼에 대한 설명으로 잘못된 것은?
  - 스프린트 검토 회의에서 개선할 사항에 대한 피드백이 정리되면 스크럼 마스터는 이를 다음 스프린트에 반영할 수 있도록 제품 백로그를 업데이트 -> 스크럼마스터가 아닌 제품책임자(PO)
19. CASE의 주요 기능으로 옳지 않은 것은?
  - 언어번역 = CASe는 S/W 라이프 사이클 전 단계의 연결, 그래픽 지원, 다양한 소프트웨어 개발 모형 지원을 주요기능으로 한다.
20. Spiral 모형의 주요 테스크에 해당되지 않는것은?
  - 버전관리
21. 요구사항 정의 및 분석-설계의 결과물을 표현하기 위한 모델링 과정에서 사용되는 다이어그램이 아닌것은? 
  - AVl Diagram -> 이진 탐색 트리에서 활용
22. 모바일 기기에서 사용하는 NUI 인터페이스에 속하지 않는 것은?
  - Flow -> Finch=줌, Press는 누른채로 지속, Flick는 빠르게 스크롤
23. 사용자가 웹 페이지를 쉽게 이동하고 탐색할 수 있도록 하는 네비게이션 구조의 요소들에 대한 설명이 틀린 것은?
  - 웹 사이트의 전체 구조를 한눈에 알아볼 수 있도록 트리 구조 형태로 만든 것으로 지도와 같은 역할을 한다 => 사이트맵
24. 전자정부 웹 표준의 준수 지침에 대한 설명으로 틀린것은?
  - 웹 서비스에 사용된 스크립트는 비표준 문법의 확장도 고려해야한다 -> 비표준 스크립트는 모든 브라우저에서 정상적으로 작동한다는 보장이 없기 떄문에 배제되어야함.
25. 사용자 인터페이스를 설게할 때 사용하는 툴이 아닌것은?
  - 드림위버 -> 드림위버는 웹페이지 개발에 사용하는 응용 프로그램
26. UI의 설계도구에 대한 설명으로 틀린것은?
  - 목업은 와이어프레임의 내용에 디스크립션을 추가한 문서이다 -> 와이어프레임에 디스크립션을 추가한 문서는 스토리보드
27. 사용자들의 UI요구사항을 작성하려고 한다. 다음 중 틀린것은?
  - 요구사항은 사용자 인터뷰를 통해서만 수집해야한다 => 요구사항은 여러경로를 통해 수집해야한다.
28. 소프트웨어 품질 측정을 위해 개발자 관점에서 고려해야 할 항목으로 거리가 먼것은?
  - 간결성 -> 품질 특성에는 기능성,신뢰성,사용성,효율성,유지보수성,이식성,호완성,보안성이 있다. 정확성은 기능성의 하우 특성, 무결성은 보안성의 하위 특성
29. ISO/IEC 9126의 소프트웨어 품질 중 기능성의 하위 특성으로 옳지 않은것은?
  - 학습성 -> 기능성의 하위 특성으로는 적합성, 정확성, 상호 운용성, 보안성, 준수성 등이 있다.
30. 패키지 소프트웨어의 일반적인 제품 풀질 요구사항 및 테스트를 위한 국제 표준은?
  - ISO/IEC 12119
31. 소프트웨어 품질 목표 중 주어진 시간동안 주어진 기능을 오류없이 수행하는 정도를 나타내는 것은?
  - 신뢰성 -> 주어진 기능을 오류없이 수행하는 정도는 즉, 얼마나 믿을 수 있느냐의 정도를 나타내는것
32. 소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는것?
  - Portability = 이식성
33. 완성된 UI 시나리오 문서를 가지고 다음 작업을 진행하는 담당자가 아닌것은? 
  - 인터랙션 디자이너 -> 시나리오 문서를 작성하는것이 인터랙션 디자이너
34. UI와 관련된 기본 개념 중 하나로, 시스템의 상태와 사용자의 지시에 대한 효과를 보여주어 사용자가 명령에 대한 진행상황과 표시된 내용을 해석할 수 있도록 도와주는 것은?
  - Feedback -> Posture : 센서가 부착된 장갑을 통해 손가락의 움직임 정보를 다루는 기법, Module : 모듈화를 통해 분리된 시스템의 각 기능들 ,Hash : 임의의 길이의 입력 데이터나 메시지를 고정된 길이의 값이나 키로 변환하는것을 의미
35. ISO/IEC 9126은 국제적으로 소프트웨어 제품의 품질을 측정하는데 이용되고 있다. 다음 중 ISO/IEC 9126에서 정의한 소프트웨어의 품질 특성이 아닌것은?
  - Visibility -> ISO/IEC 9126의 품질적 특성 : Functionality, Reliability, Usability, Effficiency, Maintanability, Portability
36. ISo/IEC 9126의 품질적 특성 중 어떤것에 가장 적합하는가(컴퓨터가 다운되면 20초 내에 정상적으로 작동되도록 해주고, 자리를 비울 경우 다른사람이 이 컴퓨터를 사용할 수 없게 해주세요_
  - 기능성/신뢰성 -> 기능성 : 사용자의 요규사항을 정확하게 만족하는 기능을 제공하는지의 여부, 신뢰성 : 오류 없이 수행할 수 있는 정도
37. ISO/IEC 9126에 규정된 품질의 주 특성과 푸 특성 간의 연결이 잘못된 것은?
  - Usability - Stability -> Stability는 Maintainability
38. ISO/IEC 25000에 관한 설명으로 옳지 않은 것은?
  - ISO/IEC 2501n에서는 소프트웨어의 내부측정, 외부측정, 사용품질측정, 품질측정요소등을 다룬다. -> 2501n은 내외부품질과 사용품질에 대한 모델 등 품질 모델 부분을 다룸, 설명은 2502n
39. 소프트웨어의 상위 설계에 속하지 않는 것은?
  - 모듈 설계 -> 상위설계는 전체적인 구조를 설계, 하위설계는 내부구조 설계
40. 파이프 필터 형태의 소프트웨어 아키텍쳐에 대한 설명으로 옳은 것은?
  - 서브시스템이 입력 데이터를 받아 처리하고 결과를 다음 서브시스템으로 넘겨주는 과정을 반복한다 
41. 서브 시스템이 입력 데이터를 받아 처리하고 결과를 다른 시스템에 보내는 작업이 반복되는 아키텍쳐 스타일은?
  - 파이프 필터 구조
42. 분산 시스템을 위한 마스터-슬레이브 아키텍쳐에 대한 설명으로 틀린 것은?
  - 슬레이브 프로세스는 데이터 수집 기능을 수행할 수 없다. -> 마스터와 슬레이브는 구조가 동일하므로 기능도 동일하게 수행 가능
43. 객체에 대한 설명으로 틀린 것은?
  - 객체는 공통 속성을 공유하는 클래스들의 집합 -> 클래스가 공통된 속성과 연산을 갖는 객체의 집합
44. 객체지향 기법에서 클래스들 사이의 Part-Whole관계 또는 is a part of 의 관계로 설명되는 연관성을 나타내는 용어는?
  - 집단화
45. 객체지향 기법에서 같은 클래스에 속한 각각의 객체를 의미하는것은?
  - Instance
46. 객체지향 기법에서 상위 클래스의 메소드와 속성을 하위 클래스가 물려받는 것을 의미하는것은?
  - Inheritance(상속)
47. 객체지향 개념에서 다형성과 관련한 설명 중 틀린것은?
  - 메소드 오버로딩의 경우 매개변수 타입은 동일하지만 메소드명을 다르게 함으로써 구현,구분할 수 있다 -> 메소드명은 같지만 매개변수의 개수나 타입을 다르게 함으로써 구현,구분
48. 럼바우의 객체지향 분석 절차를 가장 바르게 나열한것은?
  - 객체모형 -> 동적모형 -> 기능모형 (객동기)
49. 럼바우의 객체지향 분석 기법 중 자료흐름도를 주로 이용하는것은?
  - 기능 모델링
50. 럼바우 분석 기법에서 정보 모델링이라고도 하며 시스템에서 요구되는 객체를 찾아내어 속성과 연산 식별 및 객체들 간의 관계를 규정해 다이어그램을 표시하는 모델링?
  - Object
51. 결합도에 대한 설명으로 틀린것은?
  - 데이터 결합도는 두 모듈이 매개변수로 자료를 전달할때, 자료구조 형태로 전달되어 이용될 때 데이터가 결합되어 있다고 한다. -> 설명은 스탬프 결합도
  - 데이터 결합도는 다른 모듈을 호출해 데이터를 넘겨주면 그에 대한 결과값을 받아오는 것
52. 소프트웨어 개발에서 모듈이 되기 위한 주요 특징에 해당하지 않는 것은?
  - 다른 모듈에서의 접근이 불가능 해야한다. -> 모듈은 상호작용을 통해 더 큰 시스템을 구성해야하므로 모듈은 상호 접근이 가능해야한다.
53. 응집도의 종류 중 서로 간에 어떠한 의미 있는 연관 관계도 지니지 않은 기능 요소로 구성되는 경우 이며 서로 다른 상위 모듈에 의해 호출되어 처리상의 연관성이 없는 서로 다른 기능을 수행하는 경우의 응집도는?
  - Coincidental Chhesion(우연 응집도)
54. 모듈화와 관련한 설명으로 틀린것은?
  - 응집도는 모듈과 모듈 사이의 상호의존 또는 연고나 정도를 의미 => 설명은 결합도, 응집도는 모듈 내부 요소들
55. 결합도가 낮은 것부터 높은 순으로 나열한것은?
  - 결합도 높은 순으로 내용 - 공통 - 외부 - 제어 - 스템프 - 자료 이다.
56. 가장 강한 응집도는?
  - Sequential Coheison(순차) [응집도가 강한 순서는 기능 - 순차 - 교환 - 절차 - 시간 - 논리 - 우연]
57. 코드 부여 체계에 대한 설명으로 옳지 않은 것은?
  - 프로그래머가 모듈을 개발할 때 마다 임의로 코드를 부여한다. -> 임의로 부여하는 것이 아닌 코드 부여 체계에 맞게 부여해야한다.
58. 다음 내용이 설명하는 디자인 패턴[객체를 생성하기 위한 인터페이스를 정의 하여 어떤 클래스가 인스턴스화 될 것인지는 서브 클래스가 결정하도록 하는 것]
  - Factory Method 패턴
59. GOF 디자인 패턴을 생성, 구조, 행동 패턴의 세그룹으로 분류할 때, 구조 패턴이 아닌 것은?
  - Builder 패턴
60. 디자인 패턴 중에서 행위적 패턴에 속하지 않는 것은?
  - Prototype 패턴(생성패턴)
61. GoF 디자인 패턴에 대한 설명으로 틀린 것은?
  - Bridge Pattern은 기존에 구현되어 있는 기능 발생 시 기존 클래스를 재사용할 수 있도록 중간에서 맞춰주는 역할 -> 설명은 Adapter 패턴을 설명하는 중
62. GoF 디자인 패턴 중 생성 패턴으로 옳은 것은?
  - Singleton Pattern(생성패턴으로는 Abstract, Builder, Factory, Prototype, Singleton)
63. GoF 디자인 패턴의 생성 패턴에 속하지 않는 것은?
  - Adapter
64. GoF 디자인 패턴과 관련한 설명으로 틀린 것은?
  - Strategy 패턴은 대표적인 구조 패턴으로 인스턴스를 복제하여 사용하는 구조를 말한다 -> 설명은 Prototype을 설명한다.
65. 객체지향 프로그램에서 데이터를 추상화 하는 단위는?
  - Class
66. 소프트웨어 아키텍쳐 설계에 대한 설명으로 옳지 않은 것은?
  - 설계된 모듈을 프로그래밍 언어를 통해 구현한다 -> 이건 아키텍쳐 설계가 아닌 구현
67. 객체지향 설계원칙 중 서브타입은 어디에서나 자신의 기반타입으로 교체할 수 있어야 함을 의미하는 원칙은?
  - Liskov Substitution Principle
68. 객체지향 프로그램의 장점으로 거리가 먼것은?
  - 실행속도가 빨라진다 -> 절차지향보다 느림
69. 객체지향 기법에서 상속의 결과로 얻을 수 있는 가장 중한 이점은?
  - Class와 Object를 재사용할 수 있는 능력
70. 모둘의 응집도에 대한 설명 중 틀린것은?
  - 기능적 응집도는 한 모듈 내부의 한 기능 요소에 의한 출력자료가 다음 기능 요소의 입력 자료로서 제공되는 형태 -> 설명은 순차적 응집도
71. 효과적인 모듈 설계를 위한 유의사항으로 거리가 먼것은?
  - 모듈의 기능은 에측이 가능해야하며 지나치게 제한적이어야 한다. -> 지나치게 제한적이면 안된다.
72. 소프트웨어 재사용에 대한 내용 중 옳지 않은것은?
  - 규모에 따라 변수,함수,객체, 컴포넌트 단위로 재사용 된다. -> 함수,객체,컴포넌트,애플리케이션이 있다.
73. 국문학 100 철학 200 정보학 300 의 식으로 분류되는 코드는?
  - 10진 코드 
74. 냉장고 RF-235, 형광등 K-30-220-W 의 식으로 분류되는 코드는?
  - Mnemonic Code
75. 다음 중 복잡한 서브 클래스들을 피해 더 상위에 인터페이스를 구성함으로써 서브 클래스들의 기능을 간편하게 사용할 수 있도록 하는 패턴은?
  - Facade 패턴
76. 차량 네비게이션 소프트웨어에서 GPS를 수신하는 경우와 수신하지 못하는 경우에 따라 차량의 위치를 구하는 다른 알고맂므을 선택하고자 할때 가장 적합한 설계 패턴은?
  - 전략패턴
77. GoF의 디자인 패턴에서 행위 패턴에 속하는 것은?
  - Visitor
78. 알고리즘 설계 기법으로 거리가 먼 것은?
  - Static Block(알고리즘 설계 기법으론 Divide and Conquer, Dynamic Programming, Greedy Alogorithm, Backtracking)
79. 객체지향 분석 기법과 관련한 설명으로 틀린 것은?
  - 기능 중심으로 시스템을 파악하여 순차적인 처리가 중요시되는 하향식 방식으로 볼 수 있다. -> 모든 과정이 순차적으로 수행되는 하향식 방식은 절차지향
80. 
