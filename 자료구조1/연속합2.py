import sys

num = int(input())
array = list(map(int,sys.stdin.readline.split()))
dp = [[x for x in array] for _ in range(2)]

for i in range(1, num):
    dp[0][i] = max(dp[0][i - 1] + array[i], dp[0][i])
    dp[1][i] = max(dp[0][i - 1], dp[1][i - 1] + array[i])

print(max(max(dp[0]), max(dp[1])))

"""
이전에 풀었던 연속합1 문제에서 추가요소가 들어간 문제인데 구상하기 매우 어려웠다. 그래서 여러 사람의 코드를 참고하고 분석했다
문제는 num개의 정수로 이루어진 임의의 수열에서 연속된 몇개의 수를 선택해 가장 큰 합을 구하는 문제인데
수열에서 수 하나를 제거할 수 있다는 조건이 걸렸다.
그래서 dp[0][i]에는 제가히자 않고 합을 구하는 거고 dp[1][i]에서는 제거하고 합을 구하는 방식 2가지를 만들어서 max값을 구하는 것이다.
dp[0][i]에서는 제거하지 않고 구해야하므로 이전의 수와 자신의 합과 자신을 비교해서 큰값을 집어넣고
dp[1][i]에서는 본인을 제거한 경우(이전 값이 최대값) 본인 이전의 원소를 이미 제거하여 이전에 구해놓은 dp값에 현재값을 더해주는 경우 중 큰값을 집어넣는다
점점 문제가 복잡해져서 문제 분석도 시간이 걸리는 경우가 많다. 제대로 공부하고 넘어가야 헷갈리지 않을 거 같다.
"""