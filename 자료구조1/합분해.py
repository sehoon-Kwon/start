import sys
a,b=map(int,sys.stdin.readline().split())

dp=[[0]*201 for _ in range(201)]

for i in range(201):
    dp[1][i]=1 #b가 1이면 a에상관없이 경우의수는 1개(a자신)
    dp[2][i]=i+1 #b가 2고 a가 20이라면 10+10을 제외하고 0+20 1+19 ... 8+12, 9+11 10가지를 순서 바뀐경우까지해서 20가지 + 10+10 을 포함해서 21가지이다. 그래서 [2][i]=[i]+1
for i in range(2,201):
    dp[i][1]=i #a가 1이라면 b가 뭐든 b이다. 왜? [2][1]은 0,1 1,0 [3][1]은 0,0,1 0,1,0 1,0,0 이기때문이다.
    for j in range(2,201):
        dp[i][j]=(dp[i][j-1]+dp[i-1][j])%1000000000 
print(dp[b][a])

"""
a와 b가 주어지는데 a까지의 정수 b개를 더해 그 합이 a가 되는경우의 수를 구하는 문제이다.
b가 1이나 2일 경우엔 구하는게 정해져있어서 쉽게 풀 수 있었지만 b가 3을 넘어가면 복잡해졌다.
그래서 정답코드를 분석하면서 문제를 풀어보았다. 확실히 dp문제는 경우의수를 파악해서 점화식을 빠르게 구성하고 고정값을 찾는게 중요한 문제인것 같다.


점화식 :
    1   2   3   4   5
1   1   1   1   1   1

2   2   3   4   5   6

3   3   6   10  15  21

점화식을 살펴보면 dp[i][j]=dp[i][j-1]+dp[i-1][j]인것을 확인할 수 있다.

"""